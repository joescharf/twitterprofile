// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/joescharf/twitterprofile/v2/ent/schema"
	"github.com/joescharf/twitterprofile/v2/ent/stripe"
	"github.com/joescharf/twitterprofile/v2/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	stripeFields := schema.Stripe{}.Fields()
	_ = stripeFields
	// stripeDescCreatedAt is the schema descriptor for created_at field.
	stripeDescCreatedAt := stripeFields[1].Descriptor()
	// stripe.DefaultCreatedAt holds the default value on creation for the created_at field.
	stripe.DefaultCreatedAt = stripeDescCreatedAt.Default.(func() time.Time)
	// stripeDescUpdatedAt is the schema descriptor for updated_at field.
	stripeDescUpdatedAt := stripeFields[2].Descriptor()
	// stripe.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	stripe.DefaultUpdatedAt = stripeDescUpdatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[8].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[9].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
}
